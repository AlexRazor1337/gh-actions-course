name: Test and Deploy Project
on:
  pull_request:
    types: [opened]
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  test:
    matrix:
      node-version: [16, 18]
      os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install deps
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Run tests
        id: run-tests
        run: npm test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    outputs:
      script_file: ${{ steps.publish.outputs.script_file }}
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install Node 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install deps
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Publish filename
        run: find dist/assets/*.js -type f -execdir echo 'script_file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build
        uses: actions/download-artifact@v3
        with:
          name: build
      - name: Get script file
        run: echo ${{ needs.build.outputs.script_file }}
      - name: Deploy
        run: ls && echo "Deploy mock"
